{"version":3,"file":"static/js/92.d4856363.chunk.js","mappings":"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","sources":["components/Header.jsx","components/RM/RMMain.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useState, useEffect, useContext } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Accordion from 'react-bootstrap/Accordion';\nimport {\n  Container, Col, Row, ListGroup, Button,\n} from 'react-bootstrap';\nimport Fade from 'react-awesome-reveal';\nimport { ThemeContext } from 'styled-components';\nimport rehypeRaw from 'rehype-raw';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport Header from '../Header';\nimport endpoints from '../../constants/endpoints';\nimport FallbackSpinner from '../FallbackSpinner';\nimport '../../css/about.css';\nimport '../../css/srm_bootstrap.css';\n\nconst styles = {\n  introTextContainer: {\n    margin: 50,\n    flexDirection: 'column',\n    whiteSpace: 'pre-wrap',\n    textAlign: 'left',\n    fontSize: '1.2em',\n    fontWeight: 500,\n    marginBottom: 50,\n  },\n  introImageContainer: {\n    margin: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  header: {\n    margin: '100px 0 50px 0',\n  },\n  unitText: {\n    padding: '50px 0 0 0',\n  },\n};\n\nfunction SRMMain() {\n  const [data, setData] = useState(null);\n  const theme = useContext(ThemeContext);\n\n  const parseIntro = (text) => (\n    <ReactMarkdown\n      children={text}\n      rehypePlugins={[rehypeRaw]}\n    />\n  );\n\n  useEffect(() => {\n    fetch(endpoints.rmMain, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n\n  const outcomeLength = data ? data.outcome.length : 3;\n  return (\n    <>\n      <Header title=\"Research Methods and Professional Practice\" />\n      <div>\n        <Container className=\"about-screen-body-container\">\n          {data\n            ? (\n              <Fade>\n                <Row>\n                  <Col style={styles.introTextContainer}>\n                    <h2 style={styles.header}>Module Learning Outcomes</h2>\n                    <ListGroup as=\"li\" numbered>\n                      {data.outcome?.slice(0, outcomeLength).map((outcome) => (\n                        <ListGroup.Item\n                          key={uuid()}\n                          style={{\n                            backgroundColor: theme.background,\n                            color: theme.color,\n                          }}\n                        >\n                          {outcome}\n                        </ListGroup.Item>\n                      ))}\n                      <a href={data.githubLink} target=\"_blank\">\n                        <Button\n                            key={uuid()}\n                            style={styles.buttonStyle}\n                            variant={'outline-' + theme.bsSecondaryVariant}\n                            className=\"artefact-button\"\n                        >\n                          Check out all artefacts\n                        </Button>\n                      </a>\n                    </ListGroup>\n                  </Col>\n                </Row>\n                <hr />\n                <h3> Units in Details</h3>\n                {data.units?.map((unit) => (\n                 <Row>\n                   <Col style={styles.introTextContainer}>\n                     <Accordion\n                       style={{\n                        backgroundColor: theme.background,\n                        color: theme.color,\n                      }}\n                      key={uuid()}\n                     >\n                       <Accordion.Item\n                           eventKey={uuid()}\n                           style={{\n                            backgroundColor: theme.background,\n                            color: theme.color,\n                          }}\n                           key={uuid()}\n                       >\n                         <Accordion.Header style={{\n                           backgroundColor: theme.background,\n                           color: theme.color,\n                         }}>{unit.title}</Accordion.Header>\n                         <Accordion.Body>\n                           <div>\n                             <h2 style={styles.header}>{unit.title}</h2>\n                             <h4>Learning Outcomes</h4>\n                             <ListGroup as=\"li\" numbered>\n                               {unit.outcome?.slice(0, outcomeLength).map((outcome) => (\n                                   <ListGroup.Item\n                                       key={outcome}\n                                       style={{\n                                         backgroundColor: theme.background,\n                                         color: theme.color,\n                                       }}\n                                   >\n                                     {outcome}\n                                   </ListGroup.Item>\n                               ))}\n                             </ListGroup>\n                             {unit.details?.map((detail) => (\n                                 detail && (\n                                     <div\n                                         style={styles.unitText}\n                                         key={detail.route}\n                                     >\n                                       {parseIntro(detail.activity)}\n                                       {detail.route &&\n                                           <Link to={detail.route}>\n                                             <Button\n                                                 key={detail.route}\n                                                 style={styles.buttonStyle}\n                                                 variant={'outline-' + theme.bsSecondaryVariant}\n                                             >\n                                               Learn More\n                                             </Button>\n                                           </Link>\n                                       }\n                                       {detail.downloadLink &&\n                                           <a href={detail.downloadLink} target=\"_blank\">\n                                             <Button\n                                                 key={detail.route}\n                                                 style={styles.buttonStyle}\n                                                 variant={'outline-' + theme.bsSecondaryVariant}\n                                             >\n                                               Link\n                                             </Button>\n                                           </a>\n                                       }\n                                     </div>\n                                 )\n                             ))}\n                           </div>\n                         </Accordion.Body>\n                       </Accordion.Item>\n                     </Accordion>\n                   </Col>\n                 <hr />\n                 </Row>\n                ))}\n                <Row>\n                  <Col style={styles.introTextContainer}>\n                    <h2 style={styles.header}>Reflection</h2>\n                    <img className=\"reflection-image\" src=\"/e-portfolio/images/reflection.jpeg\"/>\n                    {parseIntro(data.about)}\n                    <Link to={data.reflectionLink}>\n                      <Button\n                          key={data.reflectionLink}\n                          style={styles.buttonStyle}\n                          variant={'outline-' + theme.bsSecondaryVariant}\n                      >\n                        Read More\n                      </Button>\n                    </Link>\n                    <h4 style={styles.header}>Unit 6 vs Unit 11</h4>\n                    <img className=\"reflection-image\" src=\"/e-portfolio/images/srm_units_eval.jpg\"/>\n                    <h4 style={styles.header}>References</h4>\n                    <ul>\n                      <li>Ncubukezi, T., 2020. A proposed: integration of the Monte Carlo model and the bayes network to propose cyber security risk assessment tool for small and medium enterprises in South Africa. International Journal of Computer Science and Information Security (IJCSIS), 18(3).</li>\n                      <li>Ramona, S.E., 2011. Advantages and disadvantages of quantitative and qualitative information risk approaches. Chinese Business Review, 10(12).</li>\n                      <li>Roszkowska, E., 2011. Multi-criteria decision making models by applying the TOPSIS method to crisp and interval data. Multiple Criteria Decision Making/University of Economics in Katowice, 6(1), pp.200-230.</li>\n                    </ul>\n                  </Col>\n                </Row>\n              </Fade>\n            )\n            : <FallbackSpinner />}\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default SRMMain;\n"],"names":["props","title","className","styles","introTextContainer","margin","flexDirection","whiteSpace","textAlign","fontSize","fontWeight","marginBottom","introImageContainer","justifyContent","alignItems","display","header","unitText","padding","useState","data","setData","theme","useContext","ThemeContext","parseIntro","text","children","rehypePlugins","rehypeRaw","useEffect","fetch","endpoints","method","then","res","json","catch","err","outcomeLength","outcome","length","style","as","numbered","slice","map","backgroundColor","background","color","uuid","href","githubLink","target","buttonStyle","variant","bsSecondaryVariant","units","unit","eventKey","details","detail","activity","route","to","downloadLink","src","about","reflectionLink"],"sourceRoot":""}