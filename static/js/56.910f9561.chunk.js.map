{"version":3,"file":"static/js/56.910f9561.chunk.js","mappings":"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AQxgB,GACTshB,EAAKiB,UAAYlC,EAAKqB,GAGxB+B,EAAIzjB,EACZ,CAGD,SAASktB,EAAwBltB,GAC/B,OAAI8f,GAAc9f,IAChBogB,EAAQI,QAAQxgB,GACTktB,GAGFC,EAAYntB,EACpB,CAGD,SAASitB,EAA4BjtB,GACnC,OAAa,KAATA,GACFogB,EAAQI,QAAQxgB,GACTmtB,GAGI,KAATntB,GAAwB,KAATA,GAAeof,GAAWpf,IAC3CogB,EAAQI,QAAQxgB,GACTotB,GAGLtN,GAAc9f,IAChBogB,EAAQI,QAAQxgB,GACTitB,GAGFE,EAAYntB,EACpB,CAGD,SAASotB,EAAsBptB,GAC7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAwf,GAAkBxf,IAElBogB,EAAQI,QAAQxgB,GACTotB,GAGFC,EAA2BrtB,EACnC,CAGD,SAASqtB,EAA2BrtB,GAClC,OAAa,KAATA,GACFogB,EAAQI,QAAQxgB,GACTstB,GAGLxN,GAAc9f,IAChBogB,EAAQI,QAAQxgB,GACTqtB,GAGFJ,EAA4BjtB,EACpC,CAGD,SAASstB,EAA6BttB,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOyjB,EAAIzjB,GAGA,KAATA,GAAwB,KAATA,GACjBogB,EAAQI,QAAQxgB,GAChBopB,EAASppB,EACFutB,GAGLzN,GAAc9f,IAChBogB,EAAQI,QAAQxgB,GACTstB,IAGTlE,EAAS,KACFoE,EAA+BxtB,GACvC,CAGD,SAASutB,EAA6BvtB,GACpC,OAAa,OAATA,GAAiB6f,GAAmB7f,GAC/ByjB,EAAIzjB,GAGTA,IAASopB,GACXhJ,EAAQI,QAAQxgB,GACTytB,IAGTrN,EAAQI,QAAQxgB,GACTutB,EACR,CAGD,SAASC,EAA+BxtB,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACA4f,GAA0B5f,GAEnBqtB,EAA2BrtB,IAGpCogB,EAAQI,QAAQxgB,GACTwtB,EACR,CAG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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/style-to-object/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/space-separated-tokens/index.js","../node_modules/unist-util-position/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","parse","require","iterator","output","hasIterator","len","token","tokens","input","String","index","indexOf","stringify","values","settings","concat","join","padRight","padLeft","Schema","normal","space","merge","definitions","assign","own","create","definition","properties","info","DefinedInfo","transform","attributes","mustUseProperty","includes","normalize","attribute","xlink","_","toLowerCase","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","number","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","find","schema","Type","Info","test","rest","camelcase","toUpperCase","dashes","kebab","$0","checks","keys","types","mark","check","defined","powers","increment","stringifyPosition","point","VFileMessage","place","parts","undefined","message","stack","fatal","ruleId","actual","expected","file","url","note","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","proc","cwd","isUrl","fileURLOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","buffer","messages","history","stored","map","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","getPrototypeOf","Symbol","toStringTag","middleware","callback","called","parameters","fnExpectsCallback","done","apply","exception","Promise","then","unified","base","frozen","transformers","fns","pipeline","run","middlewareIndex","pop","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","addPlugin","addList","addPreset","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","all","children","splice","remove","items","chunkStart","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","titleConstruct","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","depth","parent","referenceType","ancestor","fragment","ordered","spread","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","u","props","clean","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","child","root","table","row","out","cellIndex","cell","pointStart","pointEnd","last","trimLines","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","visit","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","tailTail","dataFootnotes","footer","bridge","mutate","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","commas","spaces","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","PropTypes","split","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","visitParents","visitor","reverse","parents","subresult","grandparents","toResult"],"sourceRoot":""}